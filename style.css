:root {
  --bg-dark: #0d1b2a;
  --primary-dark: #1b263b;
  --secondary-dark: #415a77;
  --text-light: #e0e1dd;
  --accent-cyan: #00e5ff;
  --accent-red: #ff3b30;
  --accent-green: #4af626;
  --glow-intensity: 0 0 15px;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Exo 2", sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: var(--bg-dark);
  color: var(--text-light);
  overflow: hidden;
  position: relative;
}

/* Nút bí mật */
#secret-trigger {
  position: absolute;
  top: 15px;
  right: 15px;
  width: 30px;
  height: 30px;
  background-color: transparent;
  border-radius: 50%;
  cursor: pointer;
  z-index: 1000;
  transition: box-shadow 0.3s ease;
}

#secret-trigger:hover {
  box-shadow: var(--glow-intensity) 5px var(--accent-cyan);
}

/* Container chính */
.scanner-container {
  width: 90%;
  max-width: 450px;
  background-color: var(--primary-dark);
  border: 1px solid var(--secondary-dark);
  border-radius: 16px;
  padding: 2.5rem;
  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.6),
    inset 0 0 2px 2px rgba(255, 255, 255, 0.08);
  display: flex;
  flex-direction: column;
  gap: 2rem;
  position: relative;
  overflow: hidden;
}

/* Hiệu ứng glitch cho container */
.scanner-container::before,
.scanner-container::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.scanner-container::before {
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0) 50%,
    rgba(0, 0, 0, 0.1) 50%
  );
  background-size: 100% 4px;
  animation: scanline 8s infinite linear;
}

.scanner-container::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  animation: flicker 0.15s infinite;
}

.scanner-header {
  text-align: center;
  border-bottom: 1px solid var(--secondary-dark);
  padding-bottom: 1.25rem;
  position: relative;
}

.scanner-header h1 {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-light);
  letter-spacing: 2px;
  text-shadow: var(--glow-intensity) var(--accent-cyan);
}

.scanner-header p {
  font-size: 1rem;
  color: var(--secondary-dark);
  font-weight: 500;
  margin-top: 0.5rem;
}

/* Màn hình hiển thị */
.scanner-display {
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid var(--secondary-dark);
  border-radius: 8px;
  min-height: 150px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  text-align: center;
  overflow: hidden; /* Quan trọng để ẩn phần chữ tràn */
  position: relative;
  box-shadow: inset 0 0 10px rgba(0, 229, 255, 0.2);
}

#display-content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  /* Đảm bảo nội dung luôn ở giữa và không bị tràn */
  flex-grow: 1;
  padding: 0 10px; /* Thêm padding ngang nhẹ để chữ không dính sát viền */
}

.status-text {
  font-size: 1.5rem;
  font-weight: 600;
  letter-spacing: 2px; /* Giảm khoảng cách chữ một chút nếu cần */
  text-transform: uppercase;
  position: relative;
  /* Đảm bảo văn bản tự xuống dòng và không bị tràn */
  white-space: pre-wrap; /* Giữ xuống dòng và khoảng trắng */
  word-break: break-word;
  max-width: 100%; /* Giới hạn chiều rộng */
  display: block; /* Đặt thành block để chiếm toàn bộ chiều rộng và xuống dòng */
  line-height: 1.3; /* Điều chỉnh khoảng cách dòng */
  overflow: hidden; /* Quan trọng để cắt chữ không mong muốn */
  height: auto; /* Điều chỉnh chiều cao tự động */
  animation: none; /* Reset animation */
}

/* Các lớp CSS cho hiệu ứng gõ chữ và con trỏ */
.typing-effect {
  position: relative;
  display: inline-block; /* Quan trọng để clip-path hoạt động trên text */
  white-space: pre-wrap;
  word-break: break-word;
  max-width: 100%;
  overflow: hidden; /* Cắt phần text chưa được reveal */
  animation: typingReveal 0s steps(1) forwards; /* Sẽ được JS điều khiển */
  text-align: center;
}

/* Con trỏ nhấp nháy cho hiệu ứng gõ chữ */
.typing-effect::after {
  content: "|"; /* Ký tự con trỏ */
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 2px; /* Độ rộng của con trỏ */
  background-color: currentColor; /* Màu của con trỏ */
  animation: blinkCaret 0.75s step-end infinite;
  display: inline-block;
}

/* Khi typing-effect đã hoàn tất, ẩn con trỏ */
.typing-effect.completed::after {
  animation: none;
  opacity: 0;
  display: none;
}

.status-text.initial {
  color: var(--secondary-dark);
}
.status-text.analyzing {
  color: var(--accent-cyan);
  animation: pulse 1.5s infinite;
  text-shadow: var(--glow-intensity) var(--accent-cyan);
}
.status-text.truth {
  color: var(--accent-green);
  text-shadow: var(--glow-intensity) var(--accent-green);
  animation: resultGlow 0.8s forwards;
}
.status-text.lie {
  color: var(--accent-red);
  text-shadow: var(--glow-intensity) var(--accent-red);
  animation: resultGlow 0.8s forwards;
}

/* Thanh tiến trình */
.progress-container {
  width: 90%;
  height: 8px;
  background-color: rgba(0, 0, 0, 0.4);
  border-radius: 4px;
  margin-top: 1.5rem;
  overflow: hidden;
  transition: opacity 0.5s ease;
  box-shadow: inset 0 0 5px rgba(0, 229, 255, 0.2);
}
.progress-container.hidden {
  opacity: 0;
}
.progress-bar {
  width: 0;
  height: 100%;
  background: linear-gradient(90deg, var(--accent-cyan), #9bf8ff);
  border-radius: 4px;
  transition: width 0.5s ease-out;
}

/* Nút điều khiển */
.scanner-controls {
  display: flex;
  justify-content: center;
}

#scan-button {
  font-family: "Exo 2", sans-serif;
  font-weight: 700;
  font-size: 1.25rem;
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem 2.5rem;
  border: 3px solid var(--accent-cyan);
  border-radius: 50px;
  background-color: transparent;
  color: var(--accent-cyan);
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  text-shadow: 0 0 5px rgba(0, 229, 255, 0.5);
  box-shadow: 0 0 10px rgba(0, 229, 255, 0.3);
}

#scan-button:not(:disabled):hover {
  background-color: var(--accent-cyan);
  color: var(--primary-dark);
  box-shadow: 0 0 25px rgba(0, 229, 255, 0.8), 0 0 50px rgba(0, 229, 255, 0.5);
  transform: translateY(-2px);
}

#scan-button:disabled {
  cursor: not-allowed;
  border-color: var(--secondary-dark);
  color: var(--secondary-dark);
  background-color: transparent;
  opacity: 0.7;
  box-shadow: none;
}

#scan-button:disabled .feather-target {
  animation: rotate 2s linear infinite;
}

/* Modal Overlay */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
  opacity: 1;
  transition: opacity 0.3s ease;
}

.modal-overlay.hidden {
  opacity: 0;
  pointer-events: none;
}

.modal-content {
  background-color: var(--primary-dark);
  border: 2px solid var(--accent-cyan);
  border-radius: 12px;
  padding: 2rem;
  text-align: center;
  box-shadow: 0 0 30px rgba(0, 229, 255, 0.6);
  transform: scale(1);
  transition: transform 0.3s ease;
  width: 90%;
  max-width: 400px;
}

.modal-overlay.hidden .modal-content {
  transform: scale(0.95);
}

.modal-content h2 {
  font-size: 1.8rem;
  margin-bottom: 1.5rem;
  color: var(--text-light);
  text-shadow: var(--glow-intensity) var(--accent-cyan);
}

.microphone-icon {
  margin-bottom: 1.5rem;
}

.microphone-icon svg {
  color: var(--accent-cyan);
  width: 60px;
  height: 60px;
  animation: pulseMic 1.5s infinite ease-in-out;
}

.record-button {
  font-family: "Exo 2", sans-serif;
  font-weight: 700;
  font-size: 1.3rem;
  padding: 1rem 2.5rem;
  border-radius: 50px;
  background-color: var(--accent-red);
  color: var(--text-light);
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 0 15px rgba(255, 59, 48, 0.6);
  user-select: none; /* Ngăn chặn chọn văn bản khi giữ */
  -webkit-user-select: none; /* For Safari */
  -moz-user-select: none; /* For Firefox */
  -ms-user-select: none; /* For IE10+ */
}

.record-button:active {
  background-color: #cc2a20;
  box-shadow: 0 0 25px rgba(255, 59, 48, 0.9);
  transform: scale(0.98);
}

.record-button.recording {
  background-color: #cc2a20;
  box-shadow: 0 0 20px rgba(255, 59, 48, 0.9), 0 0 40px rgba(255, 59, 48, 0.5);
  animation: pulseRecord 1s infinite alternate;
}

.record-timer {
  margin-top: 1rem;
  font-size: 1.1rem;
  color: var(--secondary-dark);
  font-weight: 500;
  min-height: 1.5em; /* Đảm bảo chiều cao để tránh nhảy layout */
}

.record-message {
  margin-top: 0.5rem;
  font-size: 0.9em;
  color: var(--secondary-dark);
  min-height: 1.2em; /* Giữ chỗ cho thông báo */
  opacity: 0;
  transition: opacity 0.3s ease;
}

.record-message.active {
  opacity: 1;
  color: var(--accent-red);
  font-weight: 600;
}

/* Keyframe animations */
@keyframes pulse {
  0%,
  100% {
    opacity: 0.7;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.02);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes scanline {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 0% 100%;
  }
}

@keyframes flicker {
  0% {
    opacity: 0.1;
  }
  5% {
    opacity: 0.4;
  }
  10% {
    opacity: 0.1;
  }
  15% {
    opacity: 0.5;
  }
  20% {
    opacity: 0.1;
  }
  25% {
    opacity: 0.3;
  }
  30% {
    opacity: 0.1;
  }
  70% {
    opacity: 0.1;
  }
  75% {
    opacity: 0.5;
  }
  80% {
    opacity: 0.1;
  }
  85% {
    opacity: 0.3;
  }
  90% {
    opacity: 0.1;
  }
  95% {
    opacity: 0.2;
  }
  100% {
    opacity: 0.1;
  }
}

@keyframes resultGlow {
  0% {
    text-shadow: 0 0 0px;
    transform: scale(0.9);
  }
  70% {
    text-shadow: var(--glow-intensity);
    transform: scale(1.05);
  }
  100% {
    text-shadow: var(--glow-intensity);
    transform: scale(1);
  }
}

/* Keyframes for typing effect */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blinkCaret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: currentColor;
  }
}

@keyframes pulseMic {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulseRecord {
  0% {
    transform: scale(1);
    box-shadow: 0 0 15px rgba(255, 59, 48, 0.6);
  }
  50% {
    transform: scale(1.03);
    box-shadow: 0 0 25px rgba(255, 59, 48, 0.9);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 15px rgba(255, 59, 48, 0.6);
  }
}
